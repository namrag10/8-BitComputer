
Adjusted to work with Breadboard, and adding stack for function calls and general use

Flags
--------

Flag 1 - Memory Mode	(10000000)
	> Low  - Data
	> High - Parameter

Flag 2 -		(01000000)
	> NOT SET

Flag 3 -		(00100000)
	> NOT SET

Flag 4 -		(00010000)
	> NOT SET

Flag 5 -		(00001000)
	> NOT SET

Flag 6 -		(00000100)
	> NOT SET

Flag 7 -		(00000010)
	> NOT SET

Flag 8 -		(00000001) ** CANNOT BE ALTERED MANUALLY **
	> OVERFLOW FLAG


Control Lines
------------------


Line 1 - Memory (Address Register) 	**IN**
v
-->	both HIGH = INP Out	**OUT**
^
Line 2 - Memory Value		**OUT**

Line 3 - 'A' Register (Address Register) 	**IN**
v
-->	both HIGH = Sub Counter Load
^
Line 4 - 'A' Register Value		**OUT**

Line 5 - Program Counter Current Count 	**OUT**
v
-->	both HIGH = Program Counter Increment
^
Line 6 - Program Counter (take number)	**IN** 

Line 7 - RAM			**WRITE** (HIGH = Write, LOW = Chip Output)

Line 8 - RAM (Address Register) 	**IN**

Line 9 - 'CALC' Register (Address Register)	**IN**
v
-->	both HIGH = END COMMAND
^
Line 10 - 'CALC' Register (Address Register)**OUT**

Line 11 - ALU			**OUT**

Line 12 - ALU Subtract Mode

Line 13 - Flag Toggle 		**IN**

Line 14 - RAM I/O (Opens RAM to the databus - Regardless of mode)

Line 15 - Instruction Register		**IN**
v
-->	both HIGH = HLT
^

Line 16 - Instruction Register		**OUT**

Line 17 - Flag Register 		**OUT**

Line 18 - Stack Push
v
-->	both HIGH = RAM INPUT Mode
^
Line 19 - Stack Pop

Line 20 - OUT Reg		**IN**

Line 21 - Parameter Register 	**IN**

-->	both HIGH = INP	**TEMP HLT**
^
Line 22 - Parameter Register		**OUT**

Line 23 - Branch Selector B

Line 24 - Branch Selector A


RAM Write Procedure
------------------------------
(Assuming Address is already set)

Requires 2 clock cycles!
	> First Cycle =
		put data on the databus, set HIGH:
			RAM Write 		(RAW - Line 7	   : ROM 1)
			RAM IO		(RIO - Line 14	   : ROM 2)
			RAM OUTPUT Mode 	(Line 18 and 19 : ROM 3)

	> Second Cycle = KEEP DATA ON DATABUS, KEEP RIO=HIGH, KEEP RAM in OUTPUT Mode, set RAW=LOW





Branching Truth Table
------------------------------

+---+---+---+
| A | B | Q |
+---+---+---+--+
| 0 | 0 | Unconditional	BRA
| 0 | 1 | Branch when 0	BRZ
| 1 | 0 | Branch on carry	BRC
| 1 | 1 | Branch if > 0	BRP
+---+---+---+--+


PC_IN && Branching condition met will branch to the address on the databus


Hard Reset Flag Register
------------------------------

Set FRT(13) && FRO(17) HIGH (Uses Databus)




Backplate Interface
--------------------------

Data:  	08 Bits x2
Addr:	16 Bits x2
CLK:	01 Bit

IN:	01 Bit
OUT:	01 Bit
CLR:	01 Bit

5x GP Input	05 Bits

Logic Flags	03 Bits

GND
VCC




